{"ast":null,"code":"'use client';\n\nimport { jsx } from 'react/jsx-runtime';\nimport { mergeProps } from '@zag-js/react';\nimport { forwardRef } from 'react';\nimport { createSplitProps } from '../../utils/create-split-props.js';\nimport { ark } from '../factory.js';\nimport { usePasswordInput } from './use-password-input.js';\nimport { PasswordInputProvider } from './use-password-input-context.js';\nconst PasswordInputRoot = forwardRef((props, ref) => {\n  const [usePasswordInputProps, localProps] = createSplitProps()(props, [\"autoComplete\", \"defaultVisible\", \"disabled\", \"id\", \"ids\", \"ignorePasswordManagers\", \"invalid\", \"name\", \"onVisibilityChange\", \"readOnly\", \"required\", \"translations\", \"visible\"]);\n  const passwordInput = usePasswordInput(usePasswordInputProps);\n  const mergedProps = mergeProps(passwordInput.getRootProps(), localProps);\n  return /* @__PURE__ */jsx(PasswordInputProvider, {\n    value: passwordInput,\n    children: /* @__PURE__ */jsx(ark.div, {\n      ...mergedProps,\n      ref\n    })\n  });\n});\nPasswordInputRoot.displayName = \"PasswordInputRoot\";\nexport { PasswordInputRoot };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}